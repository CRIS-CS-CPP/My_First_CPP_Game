#include <windows.h>
#include <iostream>

LRESULT window_callback(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
    /*
     * DefWindowProc Calls the default window procedure to provide default
     * processing for any window messages that an application does not process
     */
    return DefWindowProc(hwnd, uMsg, wParam, lParam);
}

INT WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,
    PSTR lpCmdLine, INT nCmdShow)
{
    // Create Window Class
    // https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-wndclassa
    WNDCLASS window_class = {};  // initialize to an empty struct

    // use bitwise OR to combine bits from the horizontal and vertical redraw options
    // this sets both options
    window_class.style = CS_HREDRAW | CS_VREDRAW;

    // LPCWSTR is defined as `const wchar*` which uses 16 bits for Unicode Characters (like non-English characters)
    window_class.lpszClassName = (LPCWSTR)"Game Window Class";

    /*
     * The system passes input to a window procedure in the form of a message.
     * Messages are generated by both the system and applications. The system
     * generates a message at each input event—for example, when the user
     * types, moves the mouse, or clicks a control such as a scroll bar.
     * https://learn.microsoft.com/en-us/windows/win32/winmsg/about-messages-and-message-queues#system-defined-messages
     */
    window_class.lpfnWndProc = window_callback;

    // Register Class (tell the OS this class is ready to use)
    // pass in a pointer to the address of the WNDCLASS object
    RegisterClass(&window_class);

    /*
     * Create (Overlapped) Window
     * An overlapped window is a top - level window(non - child window) that has a title bar,
     * border, and client area; it is meant to serve as an application's main window. It can
     * also have a window menu, minimize and maximize buttons, and scroll bars.
     */
    CreateWindow(
        window_class.lpszClassName,  // class name previously created in RegisterClass()
        (LPCWSTR)"My First Game!",  // title bar text
        WS_OVERLAPPEDWINDOW | WS_VISIBLE, // window style options
        CW_USEDEFAULT,  // x position (use defaults)
        CW_USEDEFAULT,  // y position (use defaults)
        1280,           // width in pixels
        720,            // height in pixels
        nullptr,        // pointer to parent window - we don't have one so use nullptr (same as NULL or 0)
        nullptr,        // pointer to module (none)
        hInstance,      // pointer to this application instance if it was already running
        nullptr         // pointer to object that is passed in to the Window message callback parameter LPARAM
    );

    return 0;
}